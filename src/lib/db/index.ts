// Generated by Xata Codegen 0.29.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "classrooms",
    columns: [
      { name: "max", type: "int", notNull: true, defaultValue: "0" },
      { name: "name", type: "string", unique: true },
      { name: "code", type: "int", unique: true },
    ],
    revLinks: [{ column: "classroom", table: "events" }],
  },
  {
    name: "hosts",
    columns: [{ name: "name", type: "string", unique: true }],
    revLinks: [{ column: "host", table: "events" }],
  },
  {
    name: "courses",
    columns: [
      { name: "name", type: "string", defaultValue: "error" },
      { name: "code", type: "string", unique: true },
    ],
    revLinks: [{ column: "course", table: "events" }],
  },
  {
    name: "events",
    columns: [
      { name: "course", type: "link", link: { table: "courses" } },
      { name: "host", type: "link", link: { table: "hosts" } },
      { name: "classroom", type: "link", link: { table: "classrooms" } },
      { name: "name", type: "string" },
      { name: "start", type: "datetime" },
      { name: "end", type: "datetime" },
      { name: "section", type: "int" },
      { name: "group", type: "int" },
      { name: "classType", type: "string" },
      { name: "known_event", type: "link", link: { table: "known_events" } },
    ],
  },
  {
    name: "known_events",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "keywords", type: "multiple" },
      { name: "thumbnail", type: "file", file: { defaultPublicAccess: true } },
    ],
    revLinks: [{ column: "known_event", table: "events" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Classrooms = InferredTypes["classrooms"];
export type ClassroomsRecord = Classrooms & XataRecord;

export type Hosts = InferredTypes["hosts"];
export type HostsRecord = Hosts & XataRecord;

export type Courses = InferredTypes["courses"];
export type CoursesRecord = Courses & XataRecord;

export type Events = InferredTypes["events"];
export type EventsRecord = Events & XataRecord;

export type KnownEvents = InferredTypes["known_events"];
export type KnownEventsRecord = KnownEvents & XataRecord;

export type DatabaseSchema = {
  classrooms: ClassroomsRecord;
  hosts: HostsRecord;
  courses: CoursesRecord;
  events: EventsRecord;
  known_events: KnownEventsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://utec-classrooms-rmhlob.us-east-1.xata.sh/db/utec-classrooms",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
